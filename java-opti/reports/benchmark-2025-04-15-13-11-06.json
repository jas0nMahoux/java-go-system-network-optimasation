# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: C:\Users\Nathane\.jdks\corretto-21.0.5\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.4\lib\idea_rt.jar=49798:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.4\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.nathansakkriou.benchmark.NetworkBenchmark.benchmarkIterative0

# Run progress: 0,00% complete, ETA 00:03:20
# Fork: 1 of 1
# Warmup Iteration   1: 0,468 ops/ms
# Warmup Iteration   2: 0,460 ops/ms
# Warmup Iteration   3: 0,448 ops/ms
# Warmup Iteration   4: 0,460 ops/ms
# Warmup Iteration   5: 0,465 ops/ms
Iteration   1: 0,459 ops/ms
Iteration   2: 0,449 ops/ms
Iteration   3: 0,415 ops/ms
Iteration   4: 0,402 ops/ms
Iteration   5: 0,360 ops/ms


Result "com.nathansakkriou.benchmark.NetworkBenchmark.benchmarkIterative0":
  0,417 ±(99.9%) 0,152 ops/ms [Average]
  (min, avg, max) = (0,360, 0,417, 0,459), stdev = 0,039
  CI (99.9%): [0,265, 0,569] (assumes normal distribution)


# JMH version: 1.37
# VM version: JDK 21.0.5, OpenJDK 64-Bit Server VM, 21.0.5+11-LTS
# VM invoker: C:\Users\Nathane\.jdks\corretto-21.0.5\bin\java.exe
# VM options: -javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.4\lib\idea_rt.jar=49798:C:\Program Files\JetBrains\IntelliJ IDEA 2024.2.4\bin -Dfile.encoding=UTF-8 -Dsun.stdout.encoding=UTF-8 -Dsun.stderr.encoding=UTF-8
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.nathansakkriou.benchmark.NetworkBenchmark.benchmarkIterative1

# Run progress: 50,00% complete, ETA 00:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 0,678 ops/ms
# Warmup Iteration   2: 0,688 ops/ms
# Warmup Iteration   3: 0,689 ops/ms
# Warmup Iteration   4: 0,650 ops/ms
# Warmup Iteration   5: 0,665 ops/ms
Iteration   1: 0,766 ops/ms
Iteration   2: 0,732 ops/ms
Iteration   3: 0,680 ops/ms
Iteration   4: 0,675 ops/ms
Iteration   5: 0,699 ops/ms


Result "com.nathansakkriou.benchmark.NetworkBenchmark.benchmarkIterative1":
  0,711 ±(99.9%) 0,148 ops/ms [Average]
  (min, avg, max) = (0,675, 0,711, 0,766), stdev = 0,038
  CI (99.9%): [0,563, 0,858] (assumes normal distribution)


# Run complete. Total time: 00:03:22

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                              Mode  Cnt  Score   Error   Units
NetworkBenchmark.benchmarkIterative0  thrpt    5  0,417 ± 0,152  ops/ms
NetworkBenchmark.benchmarkIterative1  thrpt    5  0,711 ± 0,148  ops/ms

Benchmark result is saved to jmh-result.json
